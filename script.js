/**
 * 🤖 AI-Generated Project: Minimalist Homepage
 * Generated by: Claude Sonnet 4 (Anthropic)
 * Date: 2024
 * Description: Main JavaScript - Loads all widget modules
 * Tech Stack: Vanilla HTML/CSS/JS + Tailwind CSS
 * License: MIT
 */

// ============================================================================
// MAIN SCRIPT - WIDGET LOADER
// ============================================================================

/**
 * Loads all widget modules in the correct order
 * This ensures dependencies are loaded before dependent modules
 */

// Load widget files in dependency order
const widgetFiles = [
    'taskStore.js',
    'widgets/clock.js',
    'widgets/salutation.js', 
    'widgets/search.js',
    'widgets/music.js',
    'widgets/todo.js',
    'widgets/notes.js',
    'widgets/calendar.js',
    'widgets/calculator.js',
    'widgets/game.js',
    'widgets/games/worm-game.js',
    'widgets/games/tic-tac-toe.js',
    'widgets/utils.js',
    'widgets/app-init.js'
];

/**
 * Dynamically loads a script file
 * @param {string} src - Script source path
 * @returns {Promise} Promise that resolves when script is loaded
 */
function loadScript(src) {
    return new Promise((resolve, reject) => {
        const script = document.createElement('script');
        script.src = src;
        script.onload = resolve;
        script.onerror = reject;
        document.head.appendChild(script);
    });
}

/**
 * Loads all widget files sequentially
 */
async function loadWidgets() {
    console.log('🚀 Loading widget modules...');
    
    try {
        for (const file of widgetFiles) {
            console.log(`📦 Loading: ${file}`);
            await loadScript(file);
        }
        console.log('✅ All widgets loaded successfully!');
    } catch (error) {
        console.error('❌ Error loading widgets:', error);
    }
}

// Load widgets when DOM is ready
if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', loadWidgets);
} else {
    loadWidgets();
} 